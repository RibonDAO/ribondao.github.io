"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[454],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),h=o,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7598:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},i="Introduction",l={unversionedId:"shared/introduction",id:"shared/introduction",title:"Introduction",description:"Shared is a module to share hooks, components, and other resources between different projects.",source:"@site/docs/shared/introduction.mdx",sourceDirName:"shared",slug:"/shared/introduction",permalink:"/docs/shared/introduction",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Folders Structure",permalink:"/docs/shared/folders_structure"},next:{title:"The Graph",permalink:"/docs/shared/the-graph"}},c={},s=[{value:"What we can share?",id:"what-we-can-share",level:2},{value:"Developing locally in another project",id:"developing-locally-in-another-project",level:2},{value:"On mobile app",id:"on-mobile-app",level:3}],p={toc:s};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Shared is a module to share hooks, components, and other resources between different projects."),(0,o.kt)("h2",{id:"what-we-can-share"},"What we can share?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Types (entities, responses and enums)"),(0,o.kt)("li",{parentName:"ul"},"Styles (theme and typography)"),(0,o.kt)("li",{parentName:"ul"},"Hooks and services"),(0,o.kt)("li",{parentName:"ul"},"Small libs")),(0,o.kt)("h2",{id:"developing-locally-in-another-project"},"Developing locally in another project"),(0,o.kt)("p",null,"If you want to use the lib in another project, you can start the project (it will build the lib and watch for changes) and link it to the other project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn start\ncd dist\nyarn link\n")),(0,o.kt)("p",null,"Notice you need to link the dist folder, that is generated after the build process. ",(0,o.kt)("strong",{parentName:"p"},"Observation: This does not work with react-native (see more in here)"),". You can check the section React Native Problems below to see how to use it on the mobile app."),(0,o.kt)("p",null,"Then in the project you want to test the changes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn link @ribon.io/shared\n")),(0,o.kt)("p",null,"This will link the local version of the lib to the project. Instead of using the @ribon.io/shared package from npm, it will use from your local machine. When you make changes to the @ribon.io/shared lib locally, it will be reflected in the project you are testing."),(0,o.kt)("h3",{id:"on-mobile-app"},"On mobile app"),(0,o.kt)("p",null,"React-native doesn't support symlinks, so we cannot use yarn link to build locally. To develop locally, you can use the command yarn dev on the ribon-shared project and create a .env with the relative path to the mobile app project. Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"RIBON_NATIVE_PATH=../native-dapp\n")),(0,o.kt)("p",null,"It has to have the RIBON_NATIVE_PATH variable and a relative path from the ribon-shared directory. It will copy the dist folder to the mobile app project and you can use the local version of the lib."))}u.isMDXComponent=!0}}]);