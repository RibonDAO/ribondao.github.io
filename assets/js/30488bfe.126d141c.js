"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[385],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(n),f=r,h=p["".concat(l,".").concat(f)]||p[f]||u[f]||a;return n?o.createElement(h,i(i({ref:t},s),{},{components:n})):o.createElement(h,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7190:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:1},i="Contract Walkthrough",c={unversionedId:"contract/contract-walkthrough",id:"contract/contract-walkthrough",title:"Contract Walkthrough",description:"Promoter",source:"@site/docs/contract/contract-walkthrough.mdx",sourceDirName:"contract",slug:"/contract/contract-walkthrough",permalink:"/docs/docs/contract/contract-walkthrough",draft:!1,editUrl:"https://github.com/RibonDAO/docs/docs/contract/contract-walkthrough.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Contract",permalink:"/docs/docs/category/contract"},next:{title:"Smart Contract Overview",permalink:"/docs/docs/contract/smart-contract-overview"}},l={},d=[{value:"Promoter",id:"promoter",level:2},{value:"Integration Council",id:"integration-council",level:2},{value:"integration holdings",id:"integration-holdings",level:2},{value:"NonProfit Council",id:"nonprofit-council",level:2},{value:"Pool",id:"pool",level:2},{value:"FeeWallet",id:"feewallet",level:2},{value:"Pool Increase Fee",id:"pool-increase-fee",level:2},{value:"Directly Contribution Fee",id:"directly-contribution-fee",level:2},{value:"Contract address and networks",id:"contract-address-and-networks",level:2}],s={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"contract-walkthrough"},"Contract Walkthrough"),(0,r.kt)("h2",{id:"promoter"},"Promoter"),(0,r.kt)("p",null,"Promoters can add donation tokens (usually USDC) on the donation pool."),(0,r.kt)("h2",{id:"integration-council"},"Integration Council"),(0,r.kt)("p",null,"The Integration Council is a multsig wallet that can add or remove balances from integrations.",(0,r.kt)("br",{parentName:"p"}),"\n","The sum of the balances the integrations cannot exceed the total tokens of the contract."),(0,r.kt)("h2",{id:"integration-holdings"},"integration holdings"),(0,r.kt)("p",null,"Integration holdings can distribute donation tokens based on the amount of balance they have.",(0,r.kt)("br",{parentName:"p"}),"\n","Integration holdings attach user's encrypted email on donation event and send donation token to a whitelisted nonprofit."),(0,r.kt)("h2",{id:"nonprofit-council"},"NonProfit Council"),(0,r.kt)("p",null,"The NonProfit Council is a multsig wallet that can add or remove NonProfits from the whitelist."),(0,r.kt)("h2",{id:"pool"},"Pool"),(0,r.kt)("p",null,"Pool is a contract dynamic created that was able to receive funds and can donate just to whitelisted nonprofit.\nEach pool has your own whitelist. Each pool can receive funds of just one type of token that is setted in the creation."),(0,r.kt)("h2",{id:"feewallet"},"FeeWallet"),(0,r.kt)("p",null,"Wallet that will receive all the protocol fees, since the protocol is 501c3 it must have all fee operations paid by the legal institution of the foundation"),(0,r.kt)("h2",{id:"pool-increase-fee"},"Pool Increase Fee"),(0,r.kt)("p",null,"Amount of fee charged on additions to the pool"),(0,r.kt)("h2",{id:"directly-contribution-fee"},"Directly Contribution Fee"),(0,r.kt)("p",null,"Fee amount charged on direct contributions to Nonprofits"),(0,r.kt)("h2",{id:"contract-address-and-networks"},"Contract address and networks"),(0,r.kt)("p",null,"Polygon Mainnet\nManager: 0x411DF13350D6aB065Fc2d1Fd026b6d7f4133e9Df\nPool: 0x841cad54aaeAdFc9191fb14EB09232af8E20be0F\nToken: 0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174 USDC\nGovernance Council: 0xb4e5F0073e81a9783b0480e0Ae422aE2e1dB85Fd\nIntegration Council: 0x9033d2afa81498762B57C6220208C4d7e40274B6\nNonProfit Council: 0x9033d2afa81498762B57C6220208C4d7e40274B6"),(0,r.kt)("p",null,"Polygon Testnet\nManager: 0xEdB6C84d8e604e6D60CE607e92fD37F1a6774f7e\nPool: 0xA932851982118bd5Fa99E16B144afE4622eb2A49\nToken: 0xfe4f5145f6e09952a5ba9e956ed0c25e3fa4c7f1\nGovernance Council: 0xb4e5F0073e81a9783b0480e0Ae422aE2e1dB85Fd\nIntegration Council: 0x9F9241629E8C1FE2b466754843A629b675Dd36Ab\nNonProfit Council: 0x9F9241629E8C1FE2b466754843A629b675Dd36Ab\nNonProfit example: 0x9F9241629E8C1FE2b466754843A629b675Dd36Ab"))}u.isMDXComponent=!0}}]);