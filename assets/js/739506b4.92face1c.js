"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[766],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(r),f=o,y=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return r?n.createElement(y,c(c({ref:t},u),{},{components:r})):n.createElement(y,c({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2547:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},c="CI/CD and Clean Code",i={unversionedId:"interface/ci-cd-clean-code",id:"interface/ci-cd-clean-code",title:"CI/CD and Clean Code",description:"Prettier",source:"@site/docs/interface/ci-cd-clean-code.mdx",sourceDirName:"interface",slug:"/interface/ci-cd-clean-code",permalink:"/docs/docs/interface/ci-cd-clean-code",draft:!1,editUrl:"https://github.com/RibonDAO/docs/docs/interface/ci-cd-clean-code.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Folders Structure",permalink:"/docs/docs/interface/onboarding-interface"},next:{title:"Code Quality",permalink:"/docs/docs/interface/code-quality"}},l={},s=[{value:"Prettier",id:"prettier",level:2},{value:"Husky",id:"husky",level:2},{value:"CI",id:"ci",level:2}],u={toc:s};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cicd-and-clean-code"},"CI/CD and Clean Code"),(0,o.kt)("h2",{id:"prettier"},"Prettier"),(0,o.kt)("p",null,"We have a .prettierrc file that contains all the default patterns for our projects. To use it, you just have to clone the app and select the correct version of prettier in your IDE;"),(0,o.kt)("h2",{id:"husky"},"Husky"),(0,o.kt)("p",null,"We use husky as an improvement to our commits. Every commit must pass all the tests and fulfill the requirements of prettier."),(0,o.kt)("h2",{id:"ci"},"CI"),(0,o.kt)("p",null,"Today we have a CI on Github actions. In every pull request (PR), you must request a review and it's necessary that someone approves your commit, after the review process.\nAfter you PR is approved, a Deploy PR will automatically be created."))}d.isMDXComponent=!0}}]);