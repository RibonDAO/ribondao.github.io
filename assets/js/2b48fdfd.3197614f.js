"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[497],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(r),f=o,h=d["".concat(l,".").concat(f)]||d[f]||c[f]||i;return r?n.createElement(h,a(a({ref:t},p),{},{components:r})):n.createElement(h,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5510:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:1},a="Folders Structure",s={unversionedId:"shared/folders_structure",id:"shared/folders_structure",title:"Folders Structure",description:"Config",source:"@site/docs/shared/folders_structure.mdx",sourceDirName:"shared",slug:"/shared/folders_structure",permalink:"/docs/shared/folders_structure",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Shared",permalink:"/docs/category/shared"},next:{title:"Introduction",permalink:"/docs/shared/introduction"}},l={},u=[{value:"Config",id:"config",level:2},{value:"Lib",id:"lib",level:2},{value:"Hooks",id:"hooks",level:2},{value:"Services",id:"services",level:2},{value:"Styles",id:"styles",level:2},{value:"Types",id:"types",level:2},{value:"Utils",id:"utils",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"folders-structure"},"Folders Structure"),(0,o.kt)("h2",{id:"config"},"Config"),(0,o.kt)("p",null,"Here we have the testUtils:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In the testUtils we define some utilities for our tests. Mainly, we define here our factories, that are used with the objective of creating an object of a certain type, without the logic, to be used in others contexts. Click ",(0,o.kt)("a",{parentName:"li",href:"https://refactoring.guru/design-patterns/factory-method"},"here")," for more info about factories.")),(0,o.kt)("h2",{id:"lib"},"Lib"),(0,o.kt)("p",null,"Here we define some logic to be used by our components such as date formatters, functions to humanize seconds, etc."),(0,o.kt)("h2",{id:"hooks"},"Hooks"),(0,o.kt)("p",null,"Here we add and export the api Hooks,"),(0,o.kt)("h2",{id:"services"},"Services"),(0,o.kt)("p",null,"Here we keep our api folder and other logics that are used to serve our app such as our analytics, sign in functions, etc. Another important thing that is in here is the ",(0,o.kt)("strong",{parentName:"p"},"apiTheGraph"),". For more information about The Graph, visit the reserved page for it ",(0,o.kt)("a",{parentName:"p",href:"/docs/shared/the-graph"},"link"),"."),(0,o.kt)("h2",{id:"styles"},"Styles"),(0,o.kt)("p",null,"In this folder we define the global styles for all of the app. There are some important files here, that we constantly use in our daily process of coding."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"typography.ts =>\nTypography.ts defines the font-size of our headers (h1, h2, h3, ...) and paragraphs (p). If you want to implement a title that has a font-size of 20px, instead of defining the font-size in the styles of the component, ",(0,o.kt)("strong",{parentName:"p"},"you should instead define the correspondent header that defines that font-size"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"theme =>\nIn this file, we define the colors that we use in the app, and also the breakpoints (mobile, pad, desktop) for our media-queries."))),(0,o.kt)("h2",{id:"types"},"Types"),(0,o.kt)("p",null,"In the types folder, we implement the entities of the interfaces related to our business logic, enums and api responses interfaces."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"})),(0,o.kt)("h2",{id:"utils"},"Utils"),(0,o.kt)("p",null,"We keep the abis here :)"))}c.isMDXComponent=!0}}]);